ù
DC:\Users\hrajr\source\repos\TestingProject\TestingProject\Program.cs
	namespace 	
TestingProject
 
{ 
public 

class 
Program 
{ 
static 
void 
Main 
( 
string 
[  
]  !
args" &
)& '
{ 	
Console		 
.		 
	WriteLine		 
(		 
$str		 ,
)		, -
;		- .
}

 	
} 
} ≥m
JC:\Users\hrajr\source\repos\TestingProject\TestingProject\ZapController.cs
	namespace 	
TestingProject
 
{ 
public 

class 
ZapController 
{ 
private 
Process 
proc 
; 
private 
string 
FileDirectory $
;$ %
public 
string 
Target 
; 
public 
string 
assetsDirectory %
=& '
	Directory( 1
.1 2
GetCurrentDirectory2 E
(E F
)F G
.G H
ToStringH P
(P Q
)Q R
+S T
$strU i
;i j
public 
List 
< 
XElement 
> 
	RiskFound '
;' (
public 
async 
Task 
< 
bool 
> 
UrlIsReachable  .
(. /
)/ 0
{ 	
try 
{ 
using 
( 
var 
client !
=" #
new$ '

HttpClient( 2
(2 3
)3 4
)4 5
{ 
var 
response  
=! "
await# (
client) /
./ 0
GetAsync0 8
(8 9
Target9 ?
)? @
;@ A
return 
response #
.# $

StatusCode$ .
==/ 1
HttpStatusCode2 @
.@ A
OKA C
;C D
} 
} 
catch 
( 
	Exception 
	exception &
)& '
{   
Console!! 
.!! 
	WriteLine!! !
(!!! "
$"!!" $+
Failed connecting to target:\r !!$ C
{!!C D
	exception!!D M
}!!M N
"!!N O
)!!O P
;!!P Q
return"" 
false"" 
;"" 
}## 
}$$ 	
public&& 
bool&& 
StartZapScan&&  
(&&  !
)&&! "
{'' 	
try(( 
{)) 
ClearLastSession**  
(**  !
)**! "
;**" #
string++ 
command++ 
=++  
$@"++! $!
/c zap.bat -quickurl ++$ 9
{++9 :
Target++: @
}++@ A
 -quickout ++A L
{++L M
SetFileName++M X
(++X Y
$str++Y ^
)++^ _
}++_ ` 
 -quickprogress -cmd++` t
"++t u
;++u v
ProcessStartInfo,,  
info,,! %
=,,& '
new,,( +
ProcessStartInfo,,, <
(,,< =
$str,,= F
),,F G
;,,G H
info-- 
.-- 
	Arguments-- 
=--  
command--! (
;--( )
info.. 
... !
RedirectStandardInput.. *
=..+ ,
true..- 1
;..1 2
info// 
.// 
UseShellExecute// $
=//% &
false//' ,
;//, -
info00 
.00 
WorkingDirectory00 %
=00& '
assetsDirectory00( 7
+008 9
$str00: ?
;00? @
proc22 
=22 
Process22 
.22 
Start22 $
(22$ %
info22% )
)22) *
;22* +
proc33 
.33 
WaitForExit33  
(33  !
)33! "
;33" #
return44 
true44 
;44 
}55 
catch66 
(66 
	Exception66 
	exception66 &
)66& '
{77 
Console88 
.88 
	WriteLine88 !
(88! "
$"88" $)
Executing ZAP scan failed:\r 88$ A
{88A B
	exception88B K
}88K L
"88L M
)88M N
;88N O
return99 
false99 
;99 
}:: 
};; 	
public== 
bool== 
	StartScan== 
(== 
)== 
{>> 	
try?? 
{@@ 
ClearLastSessionAA  
(AA  !
)AA! "
;AA" #
stringBB 
commandBB 
=BB  
$@"BB! $(
/c zap.bat -cmd -newsession BB$ @
{BB@ A
assetsDirectoryBBA P
}BBP Q&
scans\ -autorun config.ymlBBQ k
"BBk l
;BBl m
ProcessStartInfoCC  
infoCC! %
=CC& '
newCC( +
ProcessStartInfoCC, <
(CC< =
$strCC= F
)CCF G
;CCG H
infoDD 
.DD 
	ArgumentsDD 
=DD  
commandDD! (
;DD( )
infoEE 
.EE !
RedirectStandardInputEE *
=EE+ ,
trueEE- 1
;EE1 2
infoFF 
.FF 
UseShellExecuteFF $
=FF% &
falseFF' ,
;FF, -
infoGG 
.GG 
WorkingDirectoryGG %
=GG& '
assetsDirectoryGG( 7
+GG8 9
$strGG: ?
;GG? @
procII 
=II 
ProcessII 
.II 
StartII $
(II$ %
infoII% )
)II) *
;II* +
procJJ 
.JJ 
WaitForExitJJ  
(JJ  !
)JJ! "
;JJ" #
returnKK 
trueKK 
;KK 
}LL 
catchMM 
(MM 
	ExceptionMM 
	exceptionMM &
)MM& '
{NN 
ConsoleOO 
.OO 
	WriteLineOO !
(OO! "
$"OO" $)
Executing ZAP scan failed:\r OO$ A
{OOA B
	exceptionOOB K
}OOK L
"OOL M
)OOM N
;OON O
returnPP 
falsePP 
;PP 
}QQ 
}RR 	
publicTT 
ListTT 
<TT 
stringTT 
>TT 
GenerateResultHTMLTT .
(TT. /
)TT/ 0
{UU 	
tryVV 
{WW 
stringXX 
commandXX 
=XX  
$@"XX! $%
/c zap.bat -cmd -session XX$ =
{XX= >
assetsDirectoryXX> M
}XXM N%
scans\ -last_scan_report XXN g
{XXg h
SetFileNameXXh s
(XXs t
$strXXt z
)XXz {
}XX{ |
"XX| }
;XX} ~
ProcessStartInfoYY  
infoYY! %
=YY& '
newYY( +
ProcessStartInfoYY, <
(YY< =
$strYY= F
)YYF G
;YYG H
infoZZ 
.ZZ 
	ArgumentsZZ 
=ZZ  
commandZZ! (
;ZZ( )
info[[ 
.[[ !
RedirectStandardInput[[ *
=[[+ ,
true[[- 1
;[[1 2
info\\ 
.\\ 
UseShellExecute\\ $
=\\% &
false\\' ,
;\\, -
info]] 
.]] 
WorkingDirectory]] %
=]]& '
assetsDirectory]]( 7
+]]8 9
$str]]: ?
;]]? @
proc__ 
=__ 
Process__ 
.__ 
Start__ $
(__$ %
info__% )
)__) *
;__* +
proc`` 
.`` 
WaitForExit``  
(``  !
)``! "
;``" #
returnaa 
SortResultHTMLaa %
(aa% &
)aa& '
;aa' (
}bb 
catchcc 
(cc 
	Exceptioncc 
	exceptioncc &
)cc& '
{dd 
Consoleee 
.ee 
	WriteLineee !
(ee! "
$"ee" $)
Executing ZAP scan failed:\r ee$ A
{eeA B
	exceptioneeB K
}eeK L
"eeL M
)eeM N
;eeN O
returnff 
nullff 
;ff 
}gg 
}hh 	
publicjj 
Listjj 
<jj 
XElementjj 
>jj 
SortResultXMLjj +
(jj+ ,
)jj, -
{kk 	
varll 
reportll 
=ll 
assetsDirectoryll (
+ll) *
$strll+ >
;ll> ?
	RiskFoundmm 
=mm 
newmm 
Listmm  
<mm  !
XElementmm! )
>mm) *
(mm* +
)mm+ ,
;mm, -
trynn 
{oo 
XElementpp 
elementpp  
=pp! "
XElementpp# +
.pp+ ,
Loadpp, 0
(pp0 1
reportpp1 7
)pp7 8
;pp8 9
foreachqq 
(qq 
XElementqq !
eqq" #
inqq$ &
elementqq' .
.qq. /
Descendantsqq/ :
(qq: ;
$strqq; E
)qqE F
)qqF G
{rr 
	RiskFoundss 
.ss 
Addss !
(ss! "
ess" #
)ss# $
;ss$ %
}tt 
returnuu 
	RiskFounduu  
;uu  !
}vv 
catchww 
(ww 
	Exceptionww 
	exceptionww &
)ww& '
{xx 
Consoleyy 
.yy 
	WriteLineyy !
(yy! "
$"yy" $*
Failed sorting the results:\r yy$ B
{yyB C
	exceptionyyC L
}yyL M
"yyM N
)yyN O
;yyO P
returnzz 
nullzz 
;zz 
}{{ 
}|| 	
private~~ 
List~~ 
<~~ 
string~~ 
>~~ 
SortResultHTML~~ +
(~~+ ,
)~~, -
{ 	
List
ÄÄ 
<
ÄÄ 
string
ÄÄ 
>
ÄÄ 
results
ÄÄ  
=
ÄÄ! "
new
ÄÄ# &
List
ÄÄ' +
<
ÄÄ+ ,
string
ÄÄ, 2
>
ÄÄ2 3
(
ÄÄ3 4
)
ÄÄ4 5
;
ÄÄ5 6
var
ÅÅ 
doc
ÅÅ 
=
ÅÅ 
new
ÅÅ 
HtmlDocument
ÅÅ &
(
ÅÅ& '
)
ÅÅ' (
;
ÅÅ( )
doc
ÉÉ 
.
ÉÉ 
Load
ÉÉ 
(
ÉÉ 
assetsDirectory
ÉÉ $
+
ÉÉ% &
$str
ÉÉ' ;
)
ÉÉ; <
;
ÉÉ< =
var
ÑÑ 
table
ÑÑ 
=
ÑÑ 
doc
ÑÑ 
.
ÑÑ 
DocumentNode
ÑÑ (
.
ÑÑ( )
SelectNodes
ÑÑ) 4
(
ÑÑ4 5
$str
ÑÑ5 T
)
ÑÑT U
;
ÑÑU V
for
ÜÜ 
(
ÜÜ 
int
ÜÜ 
i
ÜÜ 
=
ÜÜ 
$num
ÜÜ 
;
ÜÜ 
i
ÜÜ 
<
ÜÜ 
$num
ÜÜ  !
;
ÜÜ! "
i
ÜÜ# $
++
ÜÜ$ &
)
ÜÜ& '
{
áá 
results
àà 
.
àà 
Add
àà 
(
àà 
table
àà !
[
àà! "
$num
àà" #
]
àà# $
.
àà$ %
SelectNodes
àà% 0
(
àà0 1
$str
àà1 7
)
àà7 8
[
àà8 9
i
àà9 :
]
àà: ;
.
àà; <
	InnerText
àà< E
)
ààE F
;
ààF G
Console
ââ 
.
ââ 
	WriteLine
ââ !
(
ââ! "
table
ââ" '
[
ââ' (
$num
ââ( )
]
ââ) *
.
ââ* +
SelectNodes
ââ+ 6
(
ââ6 7
$str
ââ7 =
)
ââ= >
[
ââ> ?
i
ââ? @
]
ââ@ A
.
ââA B
	InnerText
ââB K
)
ââK L
;
ââL M
}
ää 
return
ãã 
results
ãã 
;
ãã 
}
åå 	
public
éé 
void
éé 
	SetTarget
éé 
(
éé 
string
éé $
target
éé% +
)
éé+ ,
{
èè 	
try
êê 
{
ëë 
if
íí 
(
íí 
target
íí 
.
íí 
	Substring
íí $
(
íí$ %
$num
íí% &
,
íí& '
$num
íí( )
)
íí) *
!=
íí+ -
$str
íí. 4
)
íí4 5
{
ìì 
Target
îî 
=
îî 
$str
îî '
+
îî( )
target
îî* 0
;
îî0 1
}
ïï 
else
ññ 
Target
ññ 
=
ññ 
target
ññ $
;
ññ$ %
}
óó 
catch
òò 
(
òò 
	Exception
òò 
	exception
òò &
)
òò& '
{
ôô 
Console
öö 
.
öö 
	WriteLine
öö !
(
öö! "
$"
öö" $*
Setting up target failed:\r 
öö$ @
{
öö@ A
	exception
ööA J
}
ööJ K
"
ööK L
)
ööL M
;
ööM N
}
õõ 
}
úú 	
private
ûû 
string
ûû 
SetFileName
ûû "
(
ûû" #
string
ûû# )
format
ûû* 0
)
ûû0 1
{
üü 	
return
†† 
FileDirectory
††  
=
††! "
$char
††# &
+
††' (
$@"
††) ,
{
††, -
assetsDirectory
††- <
}
††< =
scans\report.
††= J
{
††J K
format
††K Q
}
††Q R
"
††R S
+
††T U
$char
††V Y
;
††Y Z
}
°° 	
private
££ 
void
££ 
ClearLastSession
££ %
(
££% &
)
££& '
{
§§ 	
Array
•• 
.
•• 
ForEach
•• 
(
•• 
	Directory
•• #
.
••# $
GetFiles
••$ ,
(
••, -
$@"
••- 0
{
••0 1
assetsDirectory
••1 @
}
••@ A
scans\
••A G
"
••G H
)
••H I
,
••I J
delegate
••K S
(
••T U
string
••U [
path
••\ `
)
••` a
{
••b c
File
••d h
.
••h i
Delete
••i o
(
••o p
path
••p t
)
••t u
;
••u v
}
••w x
)
••x y
;
••y z
}
¶¶ 	
}
ßß 
}®® 